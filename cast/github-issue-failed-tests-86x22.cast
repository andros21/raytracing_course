{"version": 2, "width": 95, "height": 27, "timestamp": 1620121295, "env": {"SHELL": "/usr/bin/fish", "TERM": "xterm-kitty"}}
[0.25663, "o", "\r\n\u001b[1;36mpytracer\u001b[0m on \u001b[1;35mÓÇ† \u001b[0m\u001b[1;35mmaster\u001b[0m \u001b[1;31m[\u001b[0m\u001b[1;31m!\u001b[0m\u001b[1;31m+\u001b[0m\u001b[1;31m?\u001b[0m\u001b[1;31m] \u001b[0mvia \u001b[1;33müêç \u001b[0m\u001b[1;33mv3.8.3\u001b[0m via \u001b[1;32mC \u001b[0m\u001b[1;32mbase\u001b[0m \r\n\u001b[1;32m‚ùØ\u001b[0m "]
[1.181936, "o", "p"]
[1.31763, "o", "y"]
[1.517443, "o", "t"]
[1.653742, "o", "e"]
[1.67735, "o", "r"]
[1.741161, "o", "s"]
[1.877805, "o", "t"]
[2.246142, "o", "\b\u001b[K"]
[2.4052, "o", "\b\u001b[K"]
[2.573902, "o", "\b\u001b[K"]
[2.639189, "o", "s"]
[2.741997, "o", "t"]
[3.165425, "o", "\r\n"]
[3.430497, "o", "\u001b[1m===================================== test session starts =====================================\u001b[0m\r\nplatform linux -- Python 3.8.3, pytest-6.2.2, py-1.10.0, pluggy-0.13.1\r\n"]
[3.436707, "o", "rootdir: /home/tomasi/Documents/corsi/ray-tracing/aa2021/pytracer\r\nplugins: anyio-2.2.0\r\n"]
[3.436866, "o", "\u001b[1mcollecting ... \u001b[0m"]
[3.460982, "o", "\u001b[1m\rcollected 42 items                                                                            \u001b[0m\r\n"]
[3.461467, "o", "\r\ntest_all.py "]
[3.462269, "o", "\u001b[32m.\u001b[0m"]
[3.463077, "o", "\u001b[32m.\u001b[0m"]
[3.463895, "o", "\u001b[32m.\u001b[0m"]
[3.46474, "o", "\u001b[32m.\u001b[0m"]
[3.465765, "o", "\u001b[32m.\u001b[0m"]
[3.466699, "o", "\u001b[32m.\u001b[0m"]
[3.467607, "o", "\u001b[32m.\u001b[0m"]
[3.468701, "o", "\u001b[32m.\u001b[0m"]
[3.469532, "o", "\u001b[32m.\u001b[0m"]
[3.470641, "o", "\u001b[32m.\u001b[0m"]
[3.472102, "o", "\u001b[32m.\u001b[0m"]
[3.473315, "o", "\u001b[32m.\u001b[0m"]
[3.474252, "o", "\u001b[32m.\u001b[0m"]
[3.475074, "o", "\u001b[32m.\u001b[0m"]
[3.47591, "o", "\u001b[32m.\u001b[0m"]
[3.476857, "o", "\u001b[32m.\u001b[0m"]
[3.477871, "o", "\u001b[32m.\u001b[0m"]
[3.478971, "o", "\u001b[32m.\u001b[0m"]
[3.479776, "o", "\u001b[32m.\u001b[0m"]
[3.480558, "o", "\u001b[32m.\u001b[0m"]
[3.481284, "o", "\u001b[32m.\u001b[0m"]
[3.482211, "o", "\u001b[32m.\u001b[0m"]
[3.483068, "o", "\u001b[32m.\u001b[0m"]
[3.483912, "o", "\u001b[32m.\u001b[0m"]
[3.484687, "o", "\u001b[32m.\u001b[0m"]
[3.485495, "o", "\u001b[32m.\u001b[0m"]
[3.486354, "o", "\u001b[32m.\u001b[0m"]
[3.488169, "o", "\u001b[32m.\u001b[0m"]
[3.489442, "o", "\u001b[32m.\u001b[0m"]
[3.490382, "o", "\u001b[32m.\u001b[0m"]
[3.49126, "o", "\u001b[32m.\u001b[0m"]
[3.492155, "o", "\u001b[32m.\u001b[0m"]
[3.492917, "o", "\u001b[32m.\u001b[0m"]
[3.493662, "o", "\u001b[32m.\u001b[0m"]
[3.494401, "o", "\u001b[32m.\u001b[0m"]
[3.495322, "o", "\u001b[32m.\u001b[0m"]
[3.52041, "o", "\u001b[31mF\u001b[0m"]
[3.522244, "o", "\u001b[32m.\u001b[0m"]
[3.523747, "o", "\u001b[32m.\u001b[0m"]
[3.5249, "o", "\u001b[32m.\u001b[0m"]
[3.525868, "o", "\u001b[32m.\u001b[0m"]
[3.526823, "o", "\u001b[32m.\u001b[0m"]
[3.527112, "o", "\u001b[31m                                  [100%]\u001b[0m"]
[3.527746, "o", "\r\n"]
[3.527871, "o", "\r\n========================================== FAILURES ===========================================\r\n\u001b[31m\u001b[1m______________________________ TestImageTracer.test_orientation _______________________________\u001b[0m\r\n\r\nself = <test_all.TestImageTracer testMethod=test_orientation>\r\n\r\n"]
[3.565783, "o", "    \u001b[94mdef\u001b[39;49;00m \u001b[92mtest_orientation\u001b[39;49;00m(\u001b[96mself\u001b[39;49;00m):\r\n        top_left_ray = \u001b[96mself\u001b[39;49;00m.tracer.fire_ray(\u001b[94m0\u001b[39;49;00m, \u001b[94m0\u001b[39;49;00m, u_pixel=\u001b[94m0.0\u001b[39;49;00m, v_pixel=\u001b[94m0.0\u001b[39;49;00m)\r\n>       \u001b[94massert\u001b[39;49;00m Point(\u001b[94m0.0\u001b[39;49;00m, \u001b[94m2.0\u001b[39;49;00m, \u001b[94m1.0\u001b[39;49;00m).is_close(top_left_ray.at(\u001b[94m1.0\u001b[39;49;00m))\r\n\u001b[1m\u001b[31mE       AssertionError: assert False\u001b[0m\r\n\u001b[1m\u001b[31mE        +  where False = <bound method Point.is_close of Point(x=0.0, y=2.0, z=1.0)>(Point(x=0.0, y=2.0, z=-1.0))\u001b[0m\r\n\u001b[1m\u001b[31mE        +    where <bound method Point.is_close of Point(x=0.0, y=2.0, z=1.0)> = Point(x=0.0, y=2.0, z=1.0).is_close\u001b[0m\r\n"]
[3.565898, "o", "\u001b[1m\u001b[31mE        +      where Point(x=0.0, y=2.0, z=1.0) = Point(0.0, 2.0, 1.0)\u001b[0m\r\n\u001b[1m\u001b[31mE        +    and   Point(x=0.0, y=2.0, z=-1.0) = <bound method Ray.at of Ray(origin=Point(x=-1.0, y=0.0, z=0.0), dir=Vec(x=1.0, y=2.0, z=-1.0), tmin=1.0, tmax=inf, depth=0)>(1.0)\u001b[0m\r\n\u001b[1m\u001b[31mE        +      where <bound method Ray.at of Ray(origin=Point(x=-1.0, y=0.0, z=0.0), dir=Vec(x=1.0, y=2.0, z=-1.0), tmin=1.0, tmax=inf, depth=0)> = Ray(origin=Point(x=-1.0, y=0.0, z=0.0), dir=Vec(x=1.0, y=2.0, z=-1.0), tmin=1.0, tmax=inf, depth=0).at\u001b[0m\r\n\r\n\u001b[1m\u001b[31mtest_all.py\u001b[0m:463: AssertionError\r\n"]
[3.566154, "o", "=================================== short test summary info ===================================\r\nFAILED test_all.py::TestImageTracer::test_orientation - AssertionError: assert False\r\n"]
[3.566317, "o", "\u001b[31m================================ \u001b[31m\u001b[1m1 failed\u001b[0m, \u001b[32m41 passed\u001b[0m\u001b[31m in 0.14s\u001b[0m\u001b[31m =================================\u001b[0m\r\n"]
[3.622281, "o", "\r\n\u001b[1;36mpytracer\u001b[0m on \u001b[1;35mÓÇ† \u001b[0m\u001b[1;35mmaster\u001b[0m \u001b[1;31m[\u001b[0m\u001b[1;31m!\u001b[0m\u001b[1;31m+\u001b[0m\u001b[1;31m?\u001b[0m\u001b[1;31m] \u001b[0mvia \u001b[1;33müêç \u001b[0m\u001b[1;33mv3.8.3\u001b[0m via \u001b[1;32mC \u001b[0m\u001b[1;32mbase\u001b[0m \r\n\u001b[1;31m‚ùØ\u001b[0m "]
[5.557297, "o", "exit\r\n"]
